import numpy as np
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from tqdm import tqdm

import sys
sys.path.append('..')
import gc
gc.enable()

from features import Feature


class AllLabelEncoding(Feature):
    """
    all categorical features with standard label encoding
    """
    def create_features(self, train, test):
        # apply to only feature columns
        except_cols = ['MachineIdentifier', 'HasDetections']

        for col in tqdm(train.columns.tolist()):
            if col not in except_cols:
                # covert to str to regard nan as one category
                self.train[col] = train[col].astype('str')
                self.test[col] = test[col].astype('str')

                # create label encorder
                le = LabelEncoder().fit(
                    np.unique(
                        self.train[col].unique().tolist() +
                        self.test[col].unique().tolist()
                    ))

                # encording
                self.train[col] = le.transform(self.train[col])
                self.test[col] = le.transform(self.test[col])

                del le
                gc.collect()
