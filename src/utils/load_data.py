import numpy as np
import pandas as pd
from scipy.sparse import coo_matrix


def load_features(features, _debug, target='train'):
    """
    return pandas dataframe including only given features
    """

    # load features
    dfs = [pd.read_pickle('../../data/features/{0}_{1}.pkl'.format(f, target)) for f in features]

    # combine dfs
    if len(dfs) == 1:
        x_all = dfs[0]
    elif len(dfs) >= 2:
        x_all = pd.concat(dfs, axis=1)

    # if debug is True, use only first 1%
    if _debug:
        x_all = x_all.iloc[:int(x_all.shape[0]/100)]

    return x_all


def load_target(label_name, _debug):
    """
    return pandas series of given label_name
    """
    train = pd.read_pickle('../../data/input/train.pkl')
    y_all_se = train[label_name]

    if _debug:  # use only 1%
        y_all_se = y_all_se.iloc[:int(y_all_se.shape[0]/100)]

    return y_all_se.to_numpy()

